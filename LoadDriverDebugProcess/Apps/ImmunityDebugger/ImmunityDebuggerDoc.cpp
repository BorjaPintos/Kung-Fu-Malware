// ImmunityDebuggerDoc.cpp: implementación de la clase CImmunityDebuggerDoc
//

#include "stdafx.h"
#include "ImmunityDebugger.h"

#include "ImmunityDebuggerDoc.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CImmunityDebuggerDoc

IMPLEMENT_DYNCREATE(CImmunityDebuggerDoc, CDocument)

BEGIN_MESSAGE_MAP(CImmunityDebuggerDoc, CDocument)
END_MESSAGE_MAP()


// Construcción o destrucción de CImmunityDebuggerDoc

CImmunityDebuggerDoc::CImmunityDebuggerDoc()
{
	// TODO: agregar aquí el código de construcción único

}

CImmunityDebuggerDoc::~CImmunityDebuggerDoc()
{
}

BOOL CImmunityDebuggerDoc::OnNewDocument()
{
	if (!CDocument::OnNewDocument())
		return FALSE;

	// TODO: agregar aquí código de reinicio
	// (los documentos SDI volverán a utilizar este documento)
	this->SetTitle(_T("CPU"));

	return TRUE;
}




// Serialización de CImmunityDebuggerDoc

void CImmunityDebuggerDoc::Serialize(CArchive& ar)
{
	if (ar.IsStoring())
	{
		// TODO: agregar aquí el código de almacenamiento
	}
	else
	{
		// TODO: agregar aquí el código de carga
	}
}


// Diagnósticos de CImmunityDebuggerDoc

#ifdef _DEBUG
void CImmunityDebuggerDoc::AssertValid() const
{
	CDocument::AssertValid();
}

void CImmunityDebuggerDoc::Dump(CDumpContext& dc) const
{
	CDocument::Dump(dc);
}
#endif //_DEBUG


// Comandos de CImmunityDebuggerDoc
